== DataStructure & Design Pattern Library: ==

This is a haphazard attempt at implementing some useful design
patterns in a generic KVO manner along with a home for missing data
structures from the core Sproutcore frameworks that I find useful

=== Requirements ===

DataStructures has been built and tested against Sproutcore 1.5 only

=== INSTALLATION ===

In your frameworks directory, run:
  git clone git://github.com/junction/sproutcore-datastructures.git datastructures

Requires the 2 line bug fix be made to SC.IndexSet:

http://pastebin.com/TQPegwAk

    $ git show head
    commit 3987ac0bb73a1cfbd07081f30cccecd01e845470
    Author: Erick Johnson <erick@junctionnetworks.com>
    Date:   Mon Jun 13 11:13:51 2011 -0400

        fixed chained call to endPropertyChanges

    diff --git a/frameworks/runtime/system/index_set.js b/frameworks/runtime/system/index_set.js
    index 235c402..9af2e06 100644
    --- a/frameworks/runtime/system/index_set.js
    +++ b/frameworks/runtime/system/index_set.js
    @@ -383,8 +383,8 @@ SC.IndexSet = SC.mixin({},
               .set('max', start.max)
               .set('length', start.length)
               .set('source', start.source)
    -          .enumerableContentDidChange()
    -        .endPropertyChanges();
    +          .enumerableContentDidChange();
    +        this.endPropertyChanges();
             return this ;

           } else {


=== Current Implementation ===

- mixins/composite:
  A mixin to make any sproutcore object a member to a bottom up
  composible DAG.  The composite pattern is useful for representing a
  larger object as a set of discrete parts.  This implementation is a
  modification of the composite pattern described in the gang of four
  book.

- system/query_array:
  Can be thought of like a generic RecordArray that is NOT tied to the
  store.  It allows you to apply an SC.Query (from datastore
  framework) to any array like object and end up with a 0 indexed
  fully observable array.

- system/basic_index & system/substring_hash:
  A very dirty lookup table implementation.  Likely to change severely
  in the future

=== CONTRIBUTORS ===
Author: Erick Johnson

Contributors:
        Tim Evans

=== How To ===

see the tests for documentation

=== LICENSE ===

see license.js
